{
  "tools": [
    {
      "name": "generate_class",
      "description": "Generates a C# class with specified members",
      "parameters": {
        "class_name": {
          "type": "string",
          "description": "Name of the class to generate"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace for the class"
        },
        "access_modifier": {
          "type": "string",
          "enum": ["public", "internal", "private"],
          "default": "public",
          "description": "Access modifier for the class"
        },
        "is_static": {
          "type": "boolean",
          "default": false,
          "description": "Whether the class should be static"
        },
        "base_class": {
          "type": "string",
          "description": "Base class to inherit from (optional)"
        },
        "interfaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Interfaces to implement"
        },
        "methods": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "return_type": { "type": "string" },
              "parameters": { "type": "array" },
              "is_async": { "type": "boolean" }
            }
          },
          "description": "Methods to include in the class"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "type": { "type": "string" },
              "has_getter": { "type": "boolean" },
              "has_setter": { "type": "boolean" }
            }
          },
          "description": "Properties to include in the class"
        }
      },
      "required": ["class_name", "namespace"]
    },
    {
      "name": "generate_interface",
      "description": "Generates a C# interface",
      "parameters": {
        "interface_name": {
          "type": "string",
          "description": "Name of the interface (should start with I)"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace for the interface"
        },
        "methods": {
          "type": "array",
          "description": "Method signatures for the interface"
        }
      },
      "required": ["interface_name", "namespace"]
    },
    {
      "name": "apply_code_template",
      "description": "Applies a predefined code template",
      "parameters": {
        "template_name": {
          "type": "string",
          "enum": [
            "repository_pattern",
            "service_layer",
            "builder_pattern",
            "factory_pattern",
            "singleton_pattern"
          ],
          "description": "Name of the template to apply"
        },
        "parameters": {
          "type": "object",
          "description": "Template-specific parameters"
        }
      },
      "required": ["template_name"]
    },
    {
      "name": "format_code",
      "description": "Formats generated code according to .editorconfig",
      "parameters": {
        "code": {
          "type": "string",
          "description": "The code to format"
        }
      },
      "required": ["code"]
    }
  ],
  "templates": {
    "repository_pattern": {
      "description": "Generates repository interface and implementation",
      "required_params": ["entity_name"]
    },
    "service_layer": {
      "description": "Generates service interface and implementation with DI",
      "required_params": ["service_name"]
    },
    "builder_pattern": {
      "description": "Generates fluent builder for complex object construction",
      "required_params": ["class_name"]
    }
  }
}
